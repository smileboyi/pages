{"version":3,"sources":["StorieComment/fold.svg","StorieComment/like.svg","StorieComment/index.tsx"],"names":["module","exports","StorieComment","memo","useState","longComments","setLongComments","shortComments","setShortComments","useContext","AppContext","appState","appDispatch","open","setOpen","id","useParams","history","useHistory","location","useLocation","style","useMemo","height","visibility","overflow","useEffect","sideBarInfo","data","type","payload","axios","get","then","res","status","COMMENTS","comments","catch","e","console","log","className","length","map","item","i","key","backgroundImage","avatar","author","src","like","likes","content","time","fold","transform","onClick","replace","pathname"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,iKCmBrCC,G,MAA0BC,gBAAK,WAAO,IAAD,EACDC,mBAAoB,IADnB,mBAClCC,EADkC,KACpBC,EADoB,OAECF,mBAAoB,IAFrB,mBAElCG,EAFkC,KAEnBC,EAFmB,OAGPC,qBAAWC,KAArCC,EAHiC,EAGjCA,SAAUC,EAHuB,EAGvBA,YAHuB,EAIjBR,oBAAS,GAJQ,mBAIlCS,EAJkC,KAI5BC,EAJ4B,KAKjCC,EAAOC,cAAPD,GAGFE,EAAUC,cACVC,EAAWC,cACXC,EAA6BC,mBACjC,kBACET,EACI,GACA,CACEU,OAAQ,EACRC,WAAY,SACZC,SAAU,YAElB,CAACZ,IAsCH,OAnCAa,qBAAU,WAEHf,EAASgB,YAAYC,MACxBhB,EAAY,CACViB,KAAM,mBACNC,QAAS,CACPD,KAAM,UACND,KAAM,MAIZG,IACGC,IADH,yDACyDjB,EADzD,mBAEGkB,MAAK,SAAAC,GACe,MAAfA,EAAIC,QACN7B,EAAgB4B,EAAIN,KAAKQ,SAASC,aAGrCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhBR,IACGC,IADH,yDAEsDjB,EAFtD,oBAIGkB,MAAK,SAAAC,GACe,MAAfA,EAAIC,QACN3B,EAAiB0B,EAAIN,KAAKQ,SAASC,aAGtCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAGD,yBAAKG,UAAU,yBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,QAAQrC,EAAasC,OAArC,uBAEF,yBAAKD,UAAU,QACZrC,EAAauC,KAAI,SAACC,EAAMC,GAAP,OAChB,yBAAKJ,UAAU,OAAOK,IAAKD,GACzB,uBACEJ,UAAU,SACVrB,MAAO,CAAE2B,gBAAgB,OAAD,OAASH,EAAKI,OAAd,QAE1B,yBAAKP,UAAU,QACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,QAAQG,EAAKK,QAC7B,0BAAMR,UAAU,QACd,kBAAC,IAAD,CAAUA,UAAU,WAAWS,IAAKC,MACnCP,EAAKQ,QAGV,yBAAKX,UAAU,WAAWG,EAAKS,SAC/B,yBAAKZ,UAAU,YAAYG,EAAKU,YAKxC,yBAAKb,UAAU,OAAO3B,GAAG,oBACvB,0BAAM2B,UAAU,QAAQnC,EAAcoC,OAAtC,sBACA,kBAAC,IAAD,CACED,UAAU,WACVS,IAAKK,IACLnC,MAAO,CACLoC,UAAU,UAAD,OAAY5C,EAAO,EAAI,IAAvB,SAEX6C,QAAS,WACP5C,GAASD,GAETI,EAAQ0C,QAAQxC,EAASyC,SAAW,yBAI1C,yBAAKlB,UAAU,OAAOrB,MAAOA,GAC1Bd,EAAcqC,KAAI,SAACC,EAAMC,GAAP,OACjB,yBAAKJ,UAAU,OAAOK,IAAKD,GACzB,uBACEJ,UAAU,SACVrB,MAAO,CAAE2B,gBAAgB,OAAD,OAASH,EAAKI,OAAd,QAE1B,yBAAKP,UAAU,QACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,QAAQG,EAAKK,QAC7B,0BAAMR,UAAU,QACd,kBAAC,IAAD,CAAUA,UAAU,WAAWS,IAAKC,MACnCP,EAAKQ,QAGV,yBAAKX,UAAU,WAAWG,EAAKS,SAC/B,yBAAKZ,UAAU,YAAYG,EAAKU,kBAUjCrD","file":"static/js/3.6c88296e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fold.36aaa468.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.9cf10b17.svg\";","import React, { memo, useMemo, useState, useContext, useEffect } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport axios, { AxiosError } from 'axios';\r\nimport ReactSVG from 'react-svg';\r\n\r\nimport { AppContext } from './../context';\r\nimport fold from './fold.svg';\r\nimport like from './like.svg';\r\nimport './index.scss';\r\n\r\ninterface Comment {\r\n  author: string;\r\n  content: string;\r\n  avatar: string;\r\n  time: number;\r\n  id: number;\r\n  likes: number;\r\n}\r\n\r\nconst StorieComment: React.FC = memo(() => {\r\n  const [longComments, setLongComments] = useState<Comment[]>([]);\r\n  const [shortComments, setShortComments] = useState<Comment[]>([]);\r\n  const { appState, appDispatch } = useContext(AppContext);\r\n  const [open, setOpen] = useState(false);\r\n  const { id } = useParams<{\r\n    id: string;\r\n  }>();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const style: React.CSSProperties = useMemo(\r\n    () =>\r\n      open\r\n        ? {}\r\n        : {\r\n            height: 0,\r\n            visibility: 'hidden',\r\n            overflow: 'hidden'\r\n          },\r\n    [open]\r\n  );\r\n\r\n  useEffect(() => {\r\n    // 如果页面刷新，data没有时的情况\r\n    if (!appState.sideBarInfo.data) {\r\n      appDispatch({\r\n        type: 'SET_SIDEBAR_INFO',\r\n        payload: {\r\n          type: 'comment',\r\n          data: {}\r\n        }\r\n      });\r\n    }\r\n    axios\r\n      .get(`https://zhihu-daily.leanapp.cn/api/v1/contents/${id}/long-comments`)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          setLongComments(res.data.COMMENTS.comments);\r\n        }\r\n      })\r\n      .catch((e: AxiosError) => {\r\n        console.log(e);\r\n      });\r\n    axios\r\n      .get(\r\n        `https://zhihu-daily.leanapp.cn/api/v1/contents/${id}/short-comments`\r\n      )\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          setShortComments(res.data.COMMENTS.comments);\r\n        }\r\n      })\r\n      .catch((e: AxiosError) => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"storie-comment fe ovh\">\r\n      <div className=\"comment-box h100 ovys\">\r\n        <div className=\"head\">\r\n          <span className=\"text\">{longComments.length}条长评</span>\r\n        </div>\r\n        <div className=\"list\">\r\n          {longComments.map((item, i) => (\r\n            <div className=\"item\" key={i}>\r\n              <i\r\n                className=\"avatar\"\r\n                style={{ backgroundImage: `url(${item.avatar})` }}\r\n              />\r\n              <div className=\"main\">\r\n                <div className=\"bar\">\r\n                  <span className=\"name\">{item.author}</span>\r\n                  <span className=\"like\">\r\n                    <ReactSVG className=\"like-svg\" src={like}></ReactSVG>\r\n                    {item.likes}\r\n                  </span>\r\n                </div>\r\n                <div className=\"content\">{item.content}</div>\r\n                <div className=\"datetime\">{item.time}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"head\" id=\"shortCommentsBae\">\r\n          <span className=\"text\">{shortComments.length}条短评</span>\r\n          <ReactSVG\r\n            className=\"fold-svg\"\r\n            src={fold}\r\n            style={{\r\n              transform: `rotate(${open ? 0 : 180}deg)`\r\n            }}\r\n            onClick={() => {\r\n              setOpen(!open);\r\n              // 不要使用<a href />和history.push，返回键要按2下\r\n              history.replace(location.pathname + '#shortCommentsBae');\r\n            }}\r\n          ></ReactSVG>\r\n        </div>\r\n        <div className=\"list\" style={style}>\r\n          {shortComments.map((item, i) => (\r\n            <div className=\"item\" key={i}>\r\n              <i\r\n                className=\"avatar\"\r\n                style={{ backgroundImage: `url(${item.avatar})` }}\r\n              />\r\n              <div className=\"main\">\r\n                <div className=\"bar\">\r\n                  <span className=\"name\">{item.author}</span>\r\n                  <span className=\"like\">\r\n                    <ReactSVG className=\"like-svg\" src={like}></ReactSVG>\r\n                    {item.likes}\r\n                  </span>\r\n                </div>\r\n                <div className=\"content\">{item.content}</div>\r\n                <div className=\"datetime\">{item.time}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default StorieComment;\r\n"],"sourceRoot":""}