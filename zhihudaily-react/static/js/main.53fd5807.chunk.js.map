{"version":3,"sources":["SideBar/back.svg","Loading/index.tsx","SideBar/comment.svg","SideBar/like.svg","context.ts","StoriesList/index.tsx","SideBar/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Loading","memo","className","style","fontSize","AppContext","React","createContext","appState","appDispatch","BScroll","use","PullDown","Pullup","initialState","fetchDate","topStories","listStories","reducer","state","action","type","payload","map","item","push","stateRef","globalSrollTop","day","formatDate","dateStr","d","Date","setFullYear","Number","parseInt","substr","setMonth","setDate","getMonth","getDate","getDay","StoriesList","fetchDateRef","useRef","useState","setRefreshing","useReducer","dispatch","useContext","settings","useMemo","dots","infinite","autoplay","autoplaySpeed","arrows","bScrollConfig","click","scrollY","pullDownRefresh","threshold","stop","pullUpLoad","probeType","firstFetchStories","useCallback","axios","get","then","res","status","STORIES","data","top_stories","date","stories","current","ids","id","localStorage","setItem","JSON","stringify","fetchMoreStories","catch","e","console","log","storiesIds","getItem","parse","concat","handleRefresh","useEffect","cacheDataStr","cacheDataObj","pageData","srollTop","useLayoutEffect","bScroll","on","finishPullDown","t","setTimeout","refresh","clearTimeout","finishPullUp","y","maxScrollY","scrollTo","destroy","minHeight","i","key","to","src","image","alt","title","section","j","images","SideBar","history","useHistory","fromType","sideBarInfo","initData","back","onClick","go","detailsId","comment","comments","like","popularity","withRouter","LazyStorieDetails","lazy","LazyStorieComment","StorieDetails","fallback","StorieComment","detailsSlideIds","detailsFromType","App","Provider","value","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53fd5807.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.faae682f.svg\";","import React, { memo } from 'react';\n\nconst Loading: React.SFC = memo(() => {\n  return (\n    <span className=\"centre2\" style={{ fontSize: '1.5rem' }}>\n      加载中\n      <i className=\"dot\"></i>\n    </span>\n  );\n});\n\nexport default Loading;\n","module.exports = __webpack_public_path__ + \"static/media/comment.e25562b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.a9685f91.svg\";","import React from 'react';\n\nexport interface AppState {\n  detailsSlideIds: number[];\n  detailsFromType: 'slide' | 'list';\n  sideBarInfo: {\n    type: 'list' | 'details' | 'comment';\n    data?: any;\n  };\n}\n\nexport type Action = {\n  type: string;\n  payload?: any;\n};\n\ninterface AppContextType {\n  appState: AppState;\n  appDispatch: React.Dispatch<Action>;\n}\n\nexport const AppContext = React.createContext<AppContextType>({\n  appState: {} as AppState,\n  appDispatch: () => {}\n});\n","import React, {\r\n  memo,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useReducer,\r\n  useCallback,\r\n  useLayoutEffect\r\n} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BScroll from '@better-scroll/core';\r\nimport PullDown from '@better-scroll/pull-down';\r\nimport Pullup from '@better-scroll/pull-up';\r\nimport axios, { AxiosError } from 'axios';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nimport { AppContext, Action } from './../context';\r\nimport './index.scss';\r\n\r\nBScroll.use(PullDown);\r\nBScroll.use(Pullup);\r\n\r\ninterface Storie {\r\n  title: string;\r\n  ga_prefix: string;\r\n  id: number;\r\n  type: number;\r\n  image?: string;\r\n  images?: string[];\r\n}\r\n\r\ntype ListItem = {\r\n  date: string;\r\n  data: Storie[];\r\n};\r\n\r\nconst initialState = {\r\n  fetchDate: '',\r\n  topStories: [] as Storie[],\r\n  listStories: [] as ListItem[]\r\n};\r\n\r\ntype State = typeof initialState;\r\n\r\nfunction reducer(state: State, action: Action) {\r\n  switch (action.type) {\r\n    case 'GET_TOP_STORIES':\r\n      return {\r\n        ...state,\r\n        topStories: action.payload\r\n      };\r\n    case 'ADD_FIRST_LIST_STORIES':\r\n      return {\r\n        ...state,\r\n        listStories: [action.payload]\r\n      };\r\n    case 'ADD_MORE_LIST_STORIES':\r\n      const listStories = state.listStories.map(item => item);\r\n      listStories.push(action.payload);\r\n      return {\r\n        ...state,\r\n        listStories\r\n      };\r\n    case 'RESET_LIST_STORIES_DATA':\r\n      return {\r\n        ...state,\r\n        listStories: []\r\n      };\r\n    case 'SET_FETCH_DATE':\r\n      return {\r\n        ...state,\r\n        fetchDate: action.payload\r\n      };\r\n    case 'LOAD_CACHE_DATA':\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      throw state;\r\n  }\r\n}\r\n\r\nconst day = ['日', '一', '二', '三', '四', '五', '六'];\r\ninterface CacheData {\r\n  pageData: State;\r\n  srollTop: number;\r\n}\r\n\r\nlet stateRef: State;\r\nlet globalSrollTop: number;\r\n\r\nconst formatDate = (dateStr: string) => {\r\n  let d = new Date();\r\n  d.setFullYear(Number.parseInt(dateStr.substr(0, 4)));\r\n  d.setMonth(Number.parseInt(dateStr.substr(4, 2)) - 1);\r\n  d.setDate(Number.parseInt(dateStr.substr(6, 2)));\r\n  return d.getMonth() + 1 + '月' + d.getDate() + '日 星期' + day[d.getDay()];\r\n};\r\n\r\nconst StoriesList: React.FC = memo(() => {\r\n  const fetchDateRef = useRef('');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [state, dispatch]: [State, React.Dispatch<Action>] = useReducer(\r\n    reducer,\r\n    initialState\r\n  );\r\n  stateRef = state;\r\n  const { appDispatch } = useContext(AppContext);\r\n  const settings = useMemo(() => {\r\n    return {\r\n      dots: true,\r\n      infinite: true,\r\n      autoplay: true,\r\n      autoplaySpeed: 3000,\r\n      arrows: false\r\n    };\r\n  }, []);\r\n\r\n  const bScrollConfig = useMemo(() => {\r\n    return {\r\n      click: true,\r\n      scrollY: true,\r\n      pullDownRefresh: {\r\n        threshold: 50,\r\n        stop: 0\r\n      },\r\n      pullUpLoad: {\r\n        threshold: 0\r\n      },\r\n      probeType: 3\r\n    };\r\n  }, []);\r\n\r\n  const firstFetchStories = useCallback(() => {\r\n    appDispatch({\r\n      type: 'RESET_SLIDEIDS_ARR'\r\n    });\r\n    axios\r\n      .get('https://zhihu-daily.leanapp.cn/api/v1/last-stories')\r\n      .then(res => {\r\n        setRefreshing(false);\r\n        if (res.status === 200) {\r\n          setRefreshing(false);\r\n          const STORIES = res.data.STORIES;\r\n          dispatch({\r\n            type: 'GET_TOP_STORIES',\r\n            payload: STORIES.top_stories\r\n          });\r\n          dispatch({\r\n            type: 'SET_FETCH_DATE',\r\n            payload: STORIES.date\r\n          });\r\n          dispatch({\r\n            type: 'ADD_FIRST_LIST_STORIES',\r\n            payload: {\r\n              data: STORIES.stories,\r\n              date: '今日热闻'\r\n            }\r\n          });\r\n          fetchDateRef.current = STORIES.date;\r\n          const ids = STORIES.stories.map((item: Storie) => item.id);\r\n          appDispatch({\r\n            type: 'ADD_SLIDEIDS_ARR_ID',\r\n            payload: ids\r\n          });\r\n          localStorage.setItem('storiesIds', JSON.stringify(ids));\r\n          fetchMoreStories(STORIES.date);\r\n        }\r\n      })\r\n      .catch((e: AxiosError) => {\r\n        console.log(e);\r\n        setRefreshing(false);\r\n      });\r\n  }, []);\r\n\r\n  const fetchMoreStories = useCallback(fetchDate => {\r\n    axios\r\n      .get('https://zhihu-daily.leanapp.cn/api/v1/before-stories/' + fetchDate)\r\n      .then(res => {\r\n        setRefreshing(false);\r\n        if (res.status === 200) {\r\n          const STORIES = res.data.STORIES;\r\n          dispatch({\r\n            type: 'SET_FETCH_DATE',\r\n            payload: STORIES.date\r\n          });\r\n          dispatch({\r\n            type: 'ADD_MORE_LIST_STORIES',\r\n            payload: {\r\n              data: STORIES.stories,\r\n              date: formatDate(STORIES.date)\r\n            }\r\n          });\r\n          fetchDateRef.current = STORIES.date;\r\n          const ids = STORIES.stories.map((item: Storie) => item.id);\r\n          appDispatch({\r\n            type: 'ADD_SLIDEIDS_ARR_ID',\r\n            payload: ids\r\n          });\r\n          let storiesIds = localStorage.getItem('storiesIds') || '[]';\r\n          storiesIds = JSON.parse(storiesIds).concat(ids);\r\n          localStorage.setItem('storiesIds', JSON.stringify(ids));\r\n        }\r\n      })\r\n      .catch((e: AxiosError) => {\r\n        console.log(e);\r\n        setRefreshing(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleRefresh = useCallback(() => {\r\n    setRefreshing(true);\r\n    dispatch({\r\n      type: 'RESET_LIST_STORIES_DATA'\r\n    });\r\n    localStorage.setItem('storiesListCacheData', '');\r\n    firstFetchStories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    appDispatch({\r\n      type: 'SET_SIDEBAR_INFO',\r\n      payload: {\r\n        type: 'list'\r\n      }\r\n    });\r\n    const cacheDataStr = localStorage.getItem('storiesListCacheData');\r\n    if (!cacheDataStr) {\r\n      firstFetchStories();\r\n    } else {\r\n      const cacheDataObj: CacheData = JSON.parse(cacheDataStr);\r\n      fetchDateRef.current = cacheDataObj.pageData.fetchDate;\r\n      globalSrollTop = cacheDataObj.srollTop;\r\n      dispatch({\r\n        type: 'LOAD_CACHE_DATA',\r\n        payload: cacheDataObj.pageData\r\n      });\r\n      const storiesIds = localStorage.getItem('storiesIds') || '[]';\r\n      appDispatch({\r\n        type: 'ADD_SLIDEIDS_ARR_ID',\r\n        payload: JSON.parse(storiesIds)\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    let bScroll: BScroll = new BScroll('.stories-list', bScrollConfig);\r\n    // 滚动要求：wrapper height < scroll height\r\n    // console.log(bScroll.hasVerticalScroll)\r\n    bScroll.on('pullingDown', () => {\r\n      handleRefresh();\r\n      bScroll.finishPullDown();\r\n      let t = setTimeout(() => {\r\n        bScroll.refresh();\r\n        clearTimeout(t);\r\n      }, 500);\r\n    });\r\n    bScroll.on('pullingUp', () => {\r\n      // 由于闭包的原因导致useState fetchDate获取不了新值，\r\n      // 需要添加依赖，但这样又导致bScroll多次初始化和事件绑定。\r\n      fetchMoreStories(fetchDateRef.current);\r\n      bScroll.finishPullUp();\r\n      let t = setTimeout(() => {\r\n        bScroll.refresh();\r\n        clearTimeout(t);\r\n      }, 500);\r\n    });\r\n    bScroll.on('scrollEnd', (e: { x: number; y: number }) => {\r\n      globalSrollTop = e.y;\r\n    });\r\n    if (globalSrollTop) {\r\n      let t = setTimeout(() => {\r\n        clearTimeout(t);\r\n        bScroll.maxScrollY = globalSrollTop;\r\n        bScroll.scrollTo(0, globalSrollTop, 0, {}, true);\r\n      }, 200);\r\n    }\r\n    return () => {\r\n      bScroll.destroy();\r\n      localStorage.setItem(\r\n        'storiesListCacheData',\r\n        JSON.stringify({\r\n          pageData: stateRef,\r\n          srollTop: globalSrollTop\r\n        })\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"stories-list fe ovys\">\r\n      <div style={{ minHeight: 'calc(100% + 1px)' }}>\r\n        <Slider {...settings} className=\"slider w100 ovh\">\r\n          {state.topStories.map((item, i) => (\r\n            <Link className=\"slide\" key={i} to={`/article/slide/${item.id}`}>\r\n              <img className=\"slide-img\" src={item.image} alt=\"\" />\r\n              <span className=\"slide-text\">{item.title}</span>\r\n            </Link>\r\n          ))}\r\n        </Slider>\r\n        {state.listStories.map((section, i) => (\r\n          <div className=\"stories-section\" key={i}>\r\n            <div className=\"head-title\">{section.date}</div>\r\n            <div className=\"list\">\r\n              {section.data.map((item, j) => (\r\n                <Link className=\"item\" key={j} to={`/article/list/${item.id}`}>\r\n                  <span className=\"text\">{item.title}</span>\r\n                  <img src={item.images && item.images[0]} alt=\"\" />\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default StoriesList;\r\n","import React, { memo, useMemo, useContext } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport ReactSVG from 'react-svg';\r\n\r\nimport { AppContext } from './../context';\r\nimport comment from './comment.svg';\r\nimport back from './back.svg';\r\nimport like from './like.svg';\r\nimport './index.scss';\r\n\r\nconst SideBar: React.FC = memo(() => {\r\n  const { appState, appDispatch } = useContext(AppContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const fromType = useMemo(() => {\r\n    return appState.sideBarInfo.type;\r\n  }, [appState.sideBarInfo]);\r\n\r\n  const initData = useMemo(() => {\r\n    return appState.sideBarInfo.data;\r\n  }, [appState.sideBarInfo]);\r\n\r\n  return (\r\n    <div className=\"page-sidebar\">\r\n      {fromType === 'list' && <span>首页</span>}\r\n      {fromType === 'details' && (\r\n        <>\r\n          <div className=\"left\">\r\n            <ReactSVG\r\n              className=\"sidebar-svg\"\r\n              src={back}\r\n              onClick={() => {\r\n                history.go(-1);\r\n              }}\r\n            ></ReactSVG>\r\n          </div>\r\n          <div className=\"right\">\r\n            <label\r\n              className=\"group\"\r\n              onClick={() => {\r\n                appDispatch({\r\n                  type: 'SET_SIDEBAR_INFO',\r\n                  payload: {\r\n                    type: 'comment',\r\n                    data: initData\r\n                  }\r\n                });\r\n                history.push('/comment/' + initData.detailsId);\r\n              }}\r\n            >\r\n              <ReactSVG\r\n                className=\"sidebar-svg message\"\r\n                src={comment}\r\n              ></ReactSVG>\r\n              <span className=\"text\">{initData.comments}</span>\r\n            </label>\r\n            <label className=\"group\">\r\n              <ReactSVG className=\"sidebar-svg\" src={like}></ReactSVG>\r\n              <span className=\"text\">{initData.popularity}</span>\r\n            </label>\r\n          </div>\r\n        </>\r\n      )}\r\n      {fromType === 'comment' && (\r\n        <div className=\"left\">\r\n          {initData.detailsId ? (\r\n            <>\r\n              <ReactSVG\r\n                className=\"sidebar-svg\"\r\n                src={back}\r\n                onClick={() => {\r\n                  history.go(-1);\r\n                }}\r\n              ></ReactSVG>\r\n              <span className=\"title\">{initData.comments}条评论</span>\r\n            </>\r\n          ) : (\r\n            <ReactSVG\r\n              className=\"sidebar-svg\"\r\n              src={back}\r\n              onClick={() => {\r\n                history.push('/');\r\n              }}\r\n            ></ReactSVG>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default withRouter(SideBar);\r\n","import React, { lazy, Suspense, useReducer } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport StoriesList from '../src/StoriesList/index';\nimport SideBar from '../src/SideBar/index';\nimport Loading from '../src/Loading/index';\nimport { AppContext, AppState, Action } from './context';\n\nlet LazyStorieDetails = lazy(() => import('./StorieDetails/index'));\nlet LazyStorieComment = lazy(() => import('../src/StorieComment/index'));\n\nconst StorieDetails: React.FC = () => (\n  <Suspense fallback={<Loading />}>\n    <LazyStorieDetails></LazyStorieDetails>\n  </Suspense>\n);\nconst StorieComment: React.FC = () => (\n  <Suspense fallback={<Loading />}>\n    <LazyStorieComment></LazyStorieComment>\n  </Suspense>\n);\n\nconst initialState: AppState = {\n  detailsSlideIds: [],\n  detailsFromType: 'slide',\n  sideBarInfo: {\n    type: 'list'\n  }\n};\n\nfunction reducer(state: AppState, action: Action) {\n  switch (action.type) {\n    case 'ADD_SLIDEIDS_ARR_ID':\n      const detailsSlideIds = state.detailsSlideIds.concat(action.payload);\n      return {\n        ...state,\n        detailsSlideIds\n      };\n    case 'RESET_SLIDEIDS_ARR':\n      return {\n        ...state,\n        detailsSlideIds: []\n      };\n    case 'SET_DETAILS_FROM_TYPE':\n      return {\n        ...state,\n        detailsFromType: action.payload\n      };\n    case 'SET_SIDEBAR_INFO':\n      return {\n        ...state,\n        sideBarInfo: action.payload\n      };\n    default:\n      throw state;\n  }\n}\n\nconst App: React.FC = () => {\n  const [appState, appDispatch]: [\n    AppState,\n    React.Dispatch<Action>\n  ] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider value={{ appState, appDispatch }}>\n      <BrowserRouter>\n        <div className=\"App h5w wauto h100 grail\">\n          <SideBar></SideBar>\n          <Switch>\n            <Route exact path=\"//\" component={StoriesList}></Route>\n            <Route path=\"/article/:type/:id\" component={StorieDetails}></Route>\n            <Route path=\"/comment/:id\" component={StorieComment}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}